# Правила для всех форм слова
# let @a=1|%s/"Z\zs\d\+\ze"/\=''.(@a+setreg('a',@a+1))/g|%s/ Z\[\zs\d\+\ze\]++; if(dbg){print "Z\(\d\+\)"/\1/g
#  x4707 castle_    lock_   замок  за́мок  замо́к
#  замка  замкам  замками  замках  замке  замки  замков  замком  замку  замок

function ZAMOK_F() { # <<< правила находятся в файле zamok.awk

for(wrd in omap["x4707"]){omakevars(x4707,"x4707");for(y=1;y<=wln;y++)         # header1
{makebookvars();for(i in wpos){makewposvars();if(tolower(l[i])!=iwrd)continue; # header2

 ### ALL
 ##
 cst="аляповатый астральный базальтовый баронов баронский барочный бедный бежевый безжизненный беззащитный безлюдный безмолвный безрадостный безымянный белокаменный белоснежный береговой бесконечный беспечный беспокойный бесхозный бетонный благородный благоустроенный близкий блистающий богатый божественный болотистый болотный бревенчатый брошенный брутальный вампирский вассальный великолепный величавый величественный весёлый вечный викторианский виндзорский вместительный водный военный вожделенный воздушный воображаемый восточный восхитительный вотчинный враждебный вражеский всамделишный высокий высоченный гарнизонный герцогский горделивый гордый горный городской гостеприимный готический готичный грандиозный гранитный графский грациозный грозный громадный грузноватый грустный далёкий довольный дозорный долгожданный доминиканский допотопный древесный древний дряхлый духовный епископский живописный жуткий жутковатый заботливый заброшенный забытый загадочный загородный задрипанный заколдованный занюханный заоблачный западный запретный заснеженный затерянный захолустный захудалый зачарованный зачумлённый заштатный земляной злопамятный знаменитый игрушечный известный извечный извилистый императорский инопланетный исполинский казённый каменный карточный кирпичный клановый княжеский княжий колоссальный комфортабельный королевский коронный кошмарный красивенный краснокирпичный крысиный кукольный куполообразный лакомый лебединый легендарный ледовый ледяной летописный летучий лунный лучезарный людоедский малоукреплённый малый марципановый меблированный местный мирный молчаливый монолитный монументальный мощный мраморный мрачноватый мрачный мятежный мёртвый надменный наземный нарядный наскальный наследный наследственный настороженный настоящий небедный небесный неблагородный неведомый невероятный невзрачный негостеприимный недостроенный недружелюбный незыблемый неказистый некромантский нелепый необитаемый необъятный неохраняемый непобедимый непокорный непокорённый неприветливый неприступный нерушимый несокрушимый неухоженный неуютный нормандский обветшалый обещанный обитаемый облагороженный облачный обороноспособный обсидиановый обустроенный обшарпанный обширный одноимённый оживлённый озёрный ониксовый орденский орлиный осадный ослепительный остроконечный острошпильный отдалённый отцов отцовский охотничий очарованный очаровательный панский передвижной пересыльный песочный песчаный пирамидальный пограничный подгорный подмосковный позднесредневековый позднефеодальный полоцкий полузаброшенный помпезный поразительный правительственный пресловутый претенциозный прибрежный приграничный приземистый приморский приснопамятный провинциальный промозглый прославленный просторный пряничный пустынный равнинный разбоничий разорённый районный ракушечный ренессансный реставрированный родимый родительский родовой романтический роскошный рыцарский самодостаточный свежевыстроенный свежеобретенный сверхъестественный священный сгорбленный северный семейный серокаменный сказочный скалистый скальный снежный сногсшибательный собственный соколиный средневековый старинный столичный стольный страшноватый суматошный сумрачный суровый съедобный сырный сюрреалистичный таинственный таёжный тронный увеселительный угрюмый удалённый удельный уединённый ухоженный уютный фамильный феодальный хрустальный царский царственный цементный частный чернокаменный чудный шикарный шоколадный элитный южный ястребиный";
 if ( base(-1,cst) && s(-1)  )
 { l[i]=omo1; Z[1]++; if(dbg){print "Z1"}; continue };
 if ( base(-2,cst) &&
         Q(-1,"suw_any") && s(-2,-1)  )
 { l[i]=omo1; Z[2]++; if(dbg){print "Z2"}; continue };
 if ( base(1,cst) && s(0) )
 { l[i]=omo1; Z[3]++; if(dbg){print "Z3"}; continue };
 if ( base(1,"быть стать являться") &&
        bf(2,5,cst) && s(0,bfn-1) )
 { l[i]=omo1; Z[4]++; if(dbg){print "Z4"}; continue };

 cst="аварийный автоматический автомобильный алюминиевый амбарный антивандальный антикварный армированный артефактный ассоциативный атомный барабанный батарейный бесключный бесшумный биометрический битумный блокировочный болезненный бронзовый бронированный буквенный буксирный буксировочный булатный быстровозводимый вакуумный велосипедный верёвочный весомый взаимный взломоустойчивый вибромагнитный висячий внутридверный водоупорный воронёный восковой врезной встроенный входной гаражный генный гепариновый герметичный глиняный головоломный гравированный гравитационный гранёный дактилоскопический дачный дверной декоративный дефектный дешёвый дисковый домофонный дополнительный дюрасталевый ерундовый замысловатый запорный заржавелый заскорузлый засовный зубчатый изогнутый изувеченный изуродованный импортный импровизированный импульсный индивидуальный индустриальный инженерный интегральный интимный инфракрасный искалеченный исковерканный искорёженный искровый исцарапанный казарменный камерный кандальный капельный капиллярный капризный капсюльный карабинный квартирный клиновый кнопочный кованный кованый коварный кодовый коитальный колесцовый колёсный комбинационный комбинированный комнатный компактный компьютеризированный компьютерный коннекторный контрольный креативный кремальерный кремниевый кремнёвый крепёжный криптонитовый курковый лабазный ладонный лазерный лайнерный ланжекторный латунный логический любовный лёгонький магнитный малознакомый мебельный мельничный металлизированный механический молекулярный мудрёный мышечный наборный навесный нагрудный накидной наручный невскрываемый невставленный незамкнутый незамысловатый незапертый незатейливый незащелкнутый неисправный ненарушенный неотворяемый неоткрытый неплотный неповреждённый неподатливый неподдающийся неразрывный несбиваемый несложный несмазанный нестандартный несшибаемый никелированный нутряной обратный одинарный однозубый одноразовый оконный окровавленный оплавленный орудийный оружейный особый отворяемый открытый отломанный отмычный оторванный отпечатковый отработанный отравленный офисный охранный пальцевый папиллярный парашютный паращютный патентованный переделанный перекрученный переломный перепиленный перерубленный перестановочный печатный пластиковый пластмассовый платиновый плетёный плоский плёвый поворачиваемый поворотный подбородочный подвесной подогнанный подпиленный подпорченный пожарный позолоченный покорёженный покрашенный полипреновый полированный порочный портативный потайной потёртый приваренный привинченный приоткрытый приплющенный пробойный проволочный промасленный промежностный проржавелый проржавленный просверлённый прострелянный противоугонный пудовый пушечный разбитый развороченный разобранный разорванный разрубленный раскалённый раскуроченный расстёгиваемый расшатанный ржавый ригельный роботизированный роликовый ружейный рычажный самодельный самопальный самопроизвольный сборный свежевзломанный сверхнадёжный сверхпрочный свинцовый сейфовый секирный сенсорный серотониновый системный скрученный сложный смертельный смонтированный смятый снимаемый спаянный спиленный спинорный стартовый стопорный стыковочный судорожный сундучный схематичный сцепленный тактильный таможенный титановый толстенный толстый тросовый трюмовый тугой тяжеленный тяжеловесный тяжёлый тёрочный увесистый ударнокремневый ударный укомплектованный улучшенный умный универсальный уникальный упрямый уровневый усиленный усовершенствованный установленный устроенный фирменный фитильный флажковый фотоэлектрический функциональный фюзеляжный хилый хитрый хлипкий храповый хромированный центральный цепной циллиндрический циферблатный цифровой цупферный чемоданный чердачный черепичный чугунный шариковый шарнирный шейный шифрованный шифровый школьный шлемный шлюзовый штампованный штурвальный эбонитовый электрический электромагнитный электронный эффективный";
 if ( base(-1,cst) && s(-1) )
 { l[i]=omo2; Z[5]++; if(dbg){print "Z5"}; continue };
 if ( base(-2,cst) &&
         Q(-1,"suw_any sz_iili") && s(-2,-1) )
 { l[i]=omo2; Z[6]++; if(dbg){print "Z6"}; continue };
 if ( base(1,cst) && s(0) && !(isname(1)) )
 { l[i]=omo2; Z[7]++; if(dbg){print "Z7"}; continue };
 if ( base(1,"быть стать являться") &&
      base(2,cst) && s(0,1) )
 { l[i]=omo2; Z[8]++; if(dbg){print "Z8"}; continue };

 cst="башенн[оы] комнатн[оы] [иотх]летн[еи] метров[оы] саженн[оы] стенн[оы] уровнев[оы] этажн[оы] ярусн[оы]"
 if ( wc(-1,cst) && s(-1) )
 { l[i]=omo1; Z[9]++; if(dbg){print "Z9"}; continue };

 cst="дюймов[оы] засовн[оы] значн[оы] копеечн[оы] пружинн[оы] пудов[оы] точечн[оы] штифтов[оы] цилиндров[оы] штырьков[оы]"
 if ( wc(-1,cst) && s(-1) )
 { l[i]=omo2; Z[10]++; if(dbg){print "Z10"}; continue };


 cst="бандитов барона баронов богов боса брата вампира владетеля владыки володаря волшебника генерала герцога герцогов господаря графа графини графства грёз демона дона донны дочери дочки дракона дяди епископа заклинателей зла змея императора клана князей князя колдуна колдуньи коннетабля королевства королевы королей короля лорда людоеда магистра магната мадам маркграфа маркиза маркизы матери милорда надежд надежды наместника некроманта отца отчаяния отшельника правителя предков принца принцев принцессы родителей родственников рыцарей рыцаря семейства семьи скэгов сёгуна тролля ужасов феи фей феодала хана хранителей царевны царицы царя чародея шевалье штурмом эрла эрцгерцога ярла";
 if ( wf(1,4,cst) && s(0,wfn-1) && Qf(1,wfn-1,"pre_any sz_iili") )
 { l[i]=omo1; Z[11]++; if(dbg){print "Z11"}; continue };

 cst="автомата аркебузы багажника барака безопасности браслета бюстгальтера винтовки ворот входа гаража гермолюка двери дверцы домофона забрала зажигания застёжки казённика калитки камеры капота квартиры кейса клатча клетки комбинезона контейнера костюма кошелька крышки куртки лифа лифчика люка мушкета наручника наручников орудия пальто пальцев пальчиков перчатки платья портфеля предплечья промежности пушки ремня ружья рюкзака саквояжа сарая сейфа секретера системы сумки сумочки сундучка украшения хода цепи цепочки чемодана ширинки шкатулки шкафа шкафчика шлема штанов ящика";
 if ( wf(1,5,cst) && s(0,wfn-1) && Qf(1,wfn-1,"sz_iili pre_any") && !(bb(-3,-1,"знать")) )
 { l[i]=omo2; Z[12]++; if(dbg){print "Z12"}; continue };

 cst="ангар блок ботинок брюки вагон ворота вход гараж дверка дверца дверь джинсы защёлка калитка камера кандалы клетка комбинезон комната контейнер короб кофточка крышка купе куртка лифт люк наручники ошейник пальто папка переноска платье пружина решётка рот роток рундук сапог секретер сокровищница сумка сумочка сундук тумбочка уста холодильник цепочка цепь чемодан шея шкаф шкафчик шлем штаны ящик";
 if ( w(1,"на") && Ww_(-1,"в") &&
     bf(2,5,cst) && s(0,bfn-1) && Qf(2,bfn-1,"sz_iili pre_any") )
 { l[i]=omo2; Z[13]++; if(dbg){print "Z13"}; continue };

 cst="брать взять";
 if ( base(-3,cst) &&
         q(-2,"qast") &&
         w(-1,"приступом штурмом") && s(-3,-1) )
 { l[i]=omo1; Z[14]++; if(dbg){print "Z14"}; continue };

 cst="выглядеть казаться оказаться показаться представлять";
 if ( q(-1,"nar_mest nar_napr") &&
     bf(1,3,cst) && s(-1,bfn-1) )
 { l[i]=omo1; Z[15]++; if(dbg){print "Z15"}; continue };

 cst="адмиралтейство башня бордель двор дворец дом домик замок курятник лабиринт особняк поместье постройка сердце стена существо терем тюрьма усадьба флигель";
 if ( sc(0,",") &&
       w(1,"а") &&
       w(2,"не") &&
       w(3,cst) && s(1,2) )
 { l[i]=omo1; Z[16]++; if(dbg){print "Z16"}; continue };
 if ( sc(0,",") &&
       w(1,"а") &&
       w(2,"не") &&
       q(3,"prl_any prq_any nar_any") &&
       w(4,cst) && s(1,3) )
 { l[i]=omo1; Z[17]++; if(dbg){print "Z17"}; continue };
 if ( mest_it(-2) &&
            w(-1,"не") && s(-2,-1) &&
           sc(0,",") &&
      mest_it(1) &&
            w(2,"не") &&
            w(3,cst) && s(1,2) )
 { l[i]=omo1; Z[18]++; if(dbg){print "Z18"}; continue };
 if ( mest_it(-2) &&
            w(-1,"не") && s(-2,-1) &&
           sc(0,",") &&
      mest_it(1) &&
            w(2,"не") &&
            q(3,"prl_any prq_any nar_any") &&
            w(4,cst) && s(1,3) )
 { l[i]=omo1; Z[19]++; if(dbg){print "Z19"}; continue };

 cst="дворец дом крепость музей особняк резиденция тюрьма фактория";
 if ( sc(0,"-") && base(1,cst) )
 { l[i]=omo1; Z[20]++; if(dbg){print "Z20"}; continue };
 if ( sc(-1,"-") && base(-1,cst) )
 { l[i]=omo1; Z[21]++; if(dbg){print "Z21"}; continue };

 cst="защёлка молния";
 if ( sc(-1,"-") && base(-1,cst) )
 { l[i]=omo2; Z[22]++; if(dbg){print "Z22"}; continue };
 if ( sc(0,"-") && base(1,cst) )
 { l[i]=omo2; Z[23]++; if(dbg){print "Z23"}; continue };

 cst="баронстве верстах версте горах городе земле казну километрах километре княжестве лесу междумирье междуречье местности миле милях окрестности окрестностях округе провинции пустыне устье фильме центр";
 if ( w(1,"в") &&
     wf(2,5,cst) && s(0,wfn-1) && Qf(2,wfn-1,"sz_iili pre_any") )
 { l[i]=omo1; Z[24]++; if(dbg){print "Z24"}; continue };

 cst="ванной двери дверь доме камере клетке комнате конюшне люке панцире погребе прихожей пуд сумке туалете хранилище ящике";
 if ( w(1,"в во на") &&
     wf(2,5,cst) && s(0,wfn-1) && Qf(2,wfn-1,"sz_iili pre_any") )
 { l[i]=omo2; Z[25]++; if(dbg){print "Z25"}; continue };
 if ( w(-2,"в во на") &&
      w(-1,cst) && s(-2,-1) )
 { l[i]=omo2; Z[26]++; if(dbg){print "Z26"}; continue };
 if ( w(-3,"в во на") &&
      q(-2,"prl_edpr prl_mnpr prq_edpr prq_mnpr") &&
      w(-1,cst) && s(-3,-1) && sv(-1,"\\(") )
 { l[i]=omo2; Z[27]++; if(dbg){print "Z27"}; continue };

 cst="берегу вершине востоке горе горизонте гравюре границе западе земле краю море небе озере острове песке пригорке реке севере скале туче холме холмике юге";
 if ( w(1,"на") &&
     wf(2,4,cst) && s(0,wfn-1) )
 { l[i]=omo1; Z[28]++; if(dbg){print "Z28"}; continue };
 if ( wb(-6,-1,"на") &&
      wb(wbn+1,-1,cst) && s(wbn,-1) && !(bf(1,5,"повесить") && s(0,bfn-1)) )
 { l[i]=omo1; Z[29]++; if(dbg){print "Z29"}; continue };

 cst="морем обрывом озером пропастью рвом рекой";
 if ( pre_tv(1) &&
          wf(2,4,cst) && s(0,wfn-1) )
 { l[i]=omo1; Z[30]++; if(dbg){print "Z30"}; continue };
 if ( qb(-6,-1,"pre_tv") &&
      wb(wbn+1,-1,cst) && s(wbn,-1) && s(0,qbn-1) )
 { l[i]=omo1; Z[31]++; if(dbg){print "Z31"}; continue };

 cst="берега вершины горизонта горы границы земли края моря моста неба озера острова пригорка реки скалы тучи холмика холмы";
 if ( w(1,"у возле") &&
     wf(2,4,cst) && s(0,wfn-1) )
 { l[i]=omo1; Z[32]++; if(dbg){print "Z32"}; continue };
 if ( wb(-6,-1,"у возле") &&
      wb(wbn+1,-1,cst) && s(wbn,-1) && !(bf(1,5,"повесить") && s(0,bfn-1)) )
 { l[i]=omo1; Z[33]++; if(dbg){print "Z33"}; continue };

 cst="берегу вершине востоку горе горизонту границе западу морю небу озеру острову пригорку реке северу скале туче холмику холму югу";
 if ( w(1,"к") &&
      w(2,cst) && s(0,1) )
 { l[i]=omo1; Z[34]++; if(dbg){print "Z34"}; continue };
 if ( wb(-6,-1,"к") &&
      wb(wbn+1,-1,cst) && s(wbn,-1) )
 { l[i]=omo1; Z[35]++; if(dbg){print "Z35"}; continue };

 if ( w(1,"веками вдали издали вдалеке") && s(0) )
 { l[i]=omo1; Z[36]++; if(dbg){print "Z36"}; continue };


 cst="засов";
 if ( base(1,"венчать") && (s(0)||sc(0,",")) &&
        bf(2,5,cst) && s(1,bfn-1) && Qf(2,bfn-1,"sz_iili pre_any") )
 { l[i]=omo2; Z[37]++; if(dbg){print "Z37"}; continue };

 cst="подвала";
 cst1="крыши";
 if ( qxs(1,"с со",cst,"до",cst1) )
 { l[i]=omo1; Z[38]++; if(dbg){print "Z38"}; continue };

 cst="башенка башня окно привидение слава стена";
 if ( w(1,"с со") &&
     bf(2,5,cst) && s(0,bfn-1) && Qf(2,bfn-1,"sz_iili pre_any") )
 { l[i]=omo1; Z[39]++; if(dbg){print "Z39"}; continue };

 cst="известняка иллюзий камней камня кирпича коробков мрамора палочек песка";
 if ( w(1,"из") &&
     wf(2,5,cst) && s(0,wfn-1) && Qf(2,wfn-1,"sz_iili pre_any") )
 { l[i]=omo1; Z[40]++; if(dbg){print "Z40"}; continue };
 cst1="выкладывать выложить";
 if ( (sc(0,",")||s(0)) &&
     base(1,cst1) &&
        w(2,"из") &&
       wf(3,6,cst) && s(1,wfn-1) && Qf(3,wfn-1,"sz_iili pre_any") )
 { l[i]=omo1; Z[41]++; if(dbg){print "Z41"}; continue };

 cst="ворот дверей двери дужкой засовом защёлки защёлкой индикатором калитки клавиатурой ключиком ключом кодом колёсиком механизмом мушкета набора окна орудия отверстия пистолета пистона пломбами пломбы подвала ружья секретом скважиной фиксатором шифром";
 if ( w(1,"с со") &&
     wf(2,5,cst) && s(0,wfn-1) && Qf(2,wfn-1,"sz_iili pre_any") && W_w(wfn+1,"до по") )
 { l[i]=omo2; Z[42]++; if(dbg){print "Z42"}; continue };
 if ( w(-2,"с со") &&
      w(-1,cst) && s(-2,-1) )
 { l[i]=omo2; Z[43]++; if(dbg){print "Z43"}; continue };

 cst="буква дверь защёлка индикатор клавиатура ключ ключик код колёсико механизм мушкета набор орудия отверстие пистолета пистон пломба ружья секрет скважина фиксатор шифр";
 if ( w(1,"с со") &&
     bf(2,5,cst) && s(0,bfn-1) && Qf(2,bfn-1,"sz_iili pre_any") )
 { l[i]=omo2; Z[44]++; if(dbg){print "Z44"}; continue };
 if ( w(-2,"с со") &&
   base(-1,cst) && s(-2,-1) )
 { l[i]=omo2; Z[45]++; if(dbg){print "Z45"}; continue };

 if ( sc(0,"[XIV]+") &&
       w(1,"века веков") && s(0) )
 { l[i]=omo1; Z[46]++; if(dbg){print "Z46"}; continue };

 ### замок замки им.п. вин.п.
 if(iwrd=="замок" || iwrd=="замки") {
 #
    if ( w(-1,"весь") && s(-1) )
    { l[i]=omo1; Z[47]++; if(dbg){print "Z47"}; continue };
    if ( w(1,"весь") && s(0) )
    { l[i]=omo1; Z[48]++; if(dbg){print "Z48"}; continue };

    cst="вешать";
    if ( base(-4,cst) &&
            w(-3,"на") &&
            q(-2,"prl_edvi prl_mnvi prq_edvi prq_mnvi") &&
            q(-1,"suw_edvi suw_mnvi") && s(-4,-1) )
    { l[i]=omo2; Z[49]++; if(dbg){print "Z49"}; continue };

    cst1="брать взять собрать";
    cst2="голова лодыжка локоть нога рука шея";
    if ( bb(-5,-3,cst2) && s(bbn,-3) &&
       base(-2,cst1) &&
          w(-1,"в") && s(-2,-1) )
    { l[i]=omo2; Z[50]++; if(dbg){print "Z50"}; continue };
    if ( base(-2,cst1) &&
            w(-1,"в") &&
           bf(1,3,cst2) && s(-2,bfn-1) )
    { l[i]=omo2; Z[51]++; if(dbg){print "Z51"}; continue };

    cst="засунуть сунуть";
    if ( bb(-5,-2,cst) && s(bbn,1) &&
          w(-1,"в") &&
          w(1,"к") &&
          q(2,"suw_odedda suw_odmnda isname") )
    { l[i]=omo1; Z[52]++; if(dbg){print "Z52"}; continue };
    if ( base(-2,cst1) &&
            w(-1,"в") &&
           bf(1,3,cst2) && s(-2,bfn-1) )
    { l[i]=omo2; Z[53]++; if(dbg){print "Z53"}; continue };

    cst1="вкладывать вложить";
    cst2="деньги золото магия работа серебро сила средство труд усилие";
    if ( bb(-6,-3,cst2) && s(bbn,-1) &&
       base(-2,cst1) &&
          w(-1,"в") )
    { l[i]=omo1; Z[54]++; if(dbg){print "Z54"}; continue };
    if ( bb(-7,-4,cst2) && s(bbn,-1) &&
       base(-3,cst1) &&
          w(-2,"в") &&
          q(-1,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") )
    { l[i]=omo1; Z[55]++; if(dbg){print "Z55"}; continue };
    if ( base(-4,cst2) && sc(-4,",") &&
         base(-3,cst1) &&
            w(-2,"в") &&
            q(-1,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") && s(-3,-1) )
    { l[i]=omo1; Z[56]++; if(dbg){print "Z56"}; continue };

    cst="ворота вход въезд дорога калитка тропинка ход";
    if ( base(-2,cst) &&
            w(-1,"в") && s(-2,-1) )
    { l[i]=omo1; Z[57]++; if(dbg){print "Z57"}; continue };

    cst="домой";
    if ( base(-2,cst) &&
            w(-1,"в") && s(-2,-1) )
    { l[i]=omo1; Z[58]++; if(dbg){print "Z58"}; continue };

    cst="закрывать закрыть";
    if ( w(1,"для") &&
         q(2,"mest_ro suw_edro suw_mnro") &&
        bf(3,5,cst) && s(0,bfn-1) )
    { l[i]=omo1; Z[59]++; if(dbg){print "Z59"}; continue };
    if ( bf(1,3,cst) &&
          w(bfn+1,"для") && s(0,bfn) )
    { l[i]=omo1; Z[60]++; if(dbg){print "Z60"}; continue };

    cst="быть стать явиться являться";
    if ( bf(1,3,cst) &&
          q(bfn+1,"suw_edtv suw_mntv") &&
          w(bfn+2,"для к") && s(0,bfn+1) )
    { l[i]=omo1; Z[61]++; if(dbg){print "Z61"}; continue };

    cst="вделать взять вложить вмонтировать вставить вставлять вцепиться выставить выставлять выстрелить замкнуть засовывать засунуть захватить захватывать зацепить зацеплять ключ монтировать нащупать нащупывать отмычка переплести переплетать постукивать постучать разжать разжимать свести сжать сжаться сжимать сжиматься складывать скрепить скреплять скрестить скрещивать сложить смотреть смыкаться совать соединить соединять сомкнуть сомкнуться сплести сплестись сплетать стискивать стиснуть стрелять сунуть сцепить сцепиться сцепливать сцеплять ткнуть тыкать";
    if ( base(-2,cst) &&
            w(-1,"в") && s(-2,-1) )
    { l[i]=omo2; Z[62]++; if(dbg){print "Z62"}; continue };
    if ( base(-3,cst) &&
            w(-2,"в") &&
            q(-1,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") && s(-3,-1) )
    { l[i]=omo2; Z[63]++; if(dbg){print "Z63"}; continue };
    if ( base(-4,cst) &&
            q(-3,"suw_edvi suw_mnvi") &&
            q(-2,"suw_edro suw_mnro mest_vi mest_3e") &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo2; Z[64]++; if(dbg){print "Z64"}; continue };
    if ( base(-5,cst) &&
            q(-4,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") &&
            q(-3,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") &&
            q(-2,"suw_edvi suw_mnvi") &&
            w(-1,"в") && s(-5,-1) )
    { l[i]=omo2; Z[65]++; if(dbg){print "Z65"}; continue };
    if ( base(-4,cst) &&
            q(-3,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e qast") &&
            q(-2,"suw_edvi suw_mnvi qast") &&
            w(-1,"в") && s(-4,-1) && Qf(-3,-2,"sz_iili pre_any"))
    { l[i]=omo2; Z[66]++; if(dbg){print "Z66"}; continue };
    if ( base(-5,cst) &&
            q(-4,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") &&
            q(-3,"suw_edvi suw_mnvi") &&
            w(-2,"в") &&
            q(-1,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") && s(-5,-1) )
    { l[i]=omo2; Z[67]++; if(dbg){print "Z67"}; continue };
    if ( base(-4,cst) &&
            q(-3,"suw_edvi suw_mnvi mest_vi mest_3e") &&
            w(-2,"в") &&
            q(-1,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") && s(-4,-1) )
    { l[i]=omo2; Z[68]++; if(dbg){print "Z68"}; continue };
    if ( base(-3,cst) &&
            q(-2,"suw_edvi suw_mnvi mest_vi mest_3e prl_kred_sr") &&
            w(-1,"в") && s(-3,-1) )
    { l[i]=omo2; Z[69]++; if(dbg){print "Z69"}; continue };
    if ( base(-7,cst) &&
            q(-6,"suw_edvi suw_mnvi mest_vi mest_3e") &&
       pre_pr(-5) && s(-7,-5) &&
            q(-4,"suw_edpr suw_mnpr") && sc(-4,",") &&
           sz(-3) &&
            q(-2,"suw_edvi suw_mnvi mest_vi mest_3e") &&
            w(-1,"в") && s(-3,-1) )
    { l[i]=omo2; Z[70]++; if(dbg){print "Z70"}; continue };
    if ( base(-7,cst) &&
            q(-6,"suw_edvi suw_mnvi") &&
            q(-5,"prq_edro prq_mnro") &&
       pre_pr(-4) &&
            q(-3,"suw_edpr suw_mnpr") &&
            q(-2,"suw_edro suw_mnro") &&
            w(-1,"в") && s(-7,-1) )
    { l[i]=omo2; Z[71]++; if(dbg){print "Z71"}; continue };
    if ( base(-5,cst) &&
            q(-4,"prq_edvi prq_mnvi") &&
       pre_pr(-3) &&
            q(-2,"suw_edpr suw_mnpr") &&
            w(-1,"в") && s(-5,-1) )
    { l[i]=omo2; Z[72]++; if(dbg){print "Z72"}; continue };
    if ( base(-4,cst) &&
       pre_pr(-3) &&
            q(-2,"suw_edpr suw_mnpr") &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo2; Z[73]++; if(dbg){print "Z73"}; continue };
    if ( w(-1,"в") &&
        bf(1,3,cst) && s(-1,bfn-1) && Qf(1,bfn,"sz_iili") )
    { l[i]=omo2; Z[74]++; if(dbg){print "Z74"}; continue };

    cst1="горло ладони ладонь ладошки ладошку лодыжки лодыжку ноги ногу палец пальцы руки руку талию шеи шею";
    if ( base(-4,cst) &&
       pre_vi(-3) &&
            w(-2,cst1) &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo2; Z[75]++; if(dbg){print "Z75"}; continue };

    cst9="брать браться взять взяться заключать заключаться заключить сжать сжимать сжиматься";
    if ( base(-3,cst9) &&
            w(-2,cst1) &&
            w(-1,"в") && s(-3,-1) )
    { l[i]=omo2; Z[76]++; if(dbg){print "Z76"}; continue };
    if ( base(-5,cst9) &&
            w(-4,cst1) &&
       pre_ro(-3) &&
            q(-2,"suw_edro suw_mnro") &&
            w(-1,"в") && s(-5,-1) )
    { l[i]=omo2; Z[77]++; if(dbg){print "Z77"}; continue };
    if ( base(-4,cst9) &&
            q(-3,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") &&
            w(-2,cst1) &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo2; Z[78]++; if(dbg){print "Z78"}; continue };
    if ( base(-4,cst9) &&
            w(-3,cst1) &&
            w(-2,"в") &&
            q(-1,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") && s(-4,-1) )
    { l[i]=omo2; Z[79]++; if(dbg){print "Z79"}; continue };
    if ( base(-5,cst9) &&
            q(-4,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") &&
            w(-3,cst1) &&
            w(-2,"в") &&
            q(-1,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") && s(-5,-1) )
    { l[i]=omo2; Z[80]++; if(dbg){print "Z80"}; continue };

    cst2="хватом";
    if ( base(-4,cst9) &&
            w(-3,cst2) &&
            w(-2,"в") &&
            q(-1,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") && s(-4,-1) )
    { l[i]=omo2; Z[81]++; if(dbg){print "Z81"}; continue };
    if ( base(-3,cst9) &&
            w(-2,cst2) &&
            w(-1,"в") && s(-3,-1) )
    { l[i]=omo2; Z[82]++; if(dbg){print "Z82"}; continue };


    if ( base(-3,"пуля") &&
         base(-2,"угодить") &&
            w(-1,"в") && s(-3,-1) )
    { l[i]=omo2; Z[83]++; if(dbg){print "Z83"}; continue };

    cst="блок вешать ворота вставать встать дверь закрывать закрываться закрыть закрыться замкнуть запереть запереться запирать запираться застегнуть застёгивать захлопнуть захлопнуться захлопывать захлопываться защёлкнуть защёлкнуться кандалы навесить наручники нащупать нащупывать перейти переходить посадить рот роток садить сажать холодильник";
    if ( base(-2,cst) &&
            w(-1,"на") && s(-2,-1) )
    { l[i]=omo2; Z[84]++; if(dbg){print "Z84"}; continue };
    if ( base(-3,cst) &&
            q(-2,"suw_edvi suw_mnvi") &&
            w(-1,"на") && s(-3,-1) )
    { l[i]=omo2; Z[85]++; if(dbg){print "Z85"}; continue };
    if ( base(-5,cst) &&
       pre_pr(-4) &&
            q(-3,"prl_edpr prl_mnpr mest_pr mest_3e") &&
            q(-2,"suw_edpr suw_mnpr") &&
            w(-1,"на") && s(-5,-1) )
    { l[i]=omo2; Z[86]++; if(dbg){print "Z86"}; continue };
    if ( base(-4,cst) &&
            q(-3,"prl_edvi prl_mnvi mest_vi mest_3e") &&
            q(-2,"suw_edvi suw_mnvi") &&
            w(-1,"на") && s(-4,-1) )
    { l[i]=omo2; Z[87]++; if(dbg){print "Z87"}; continue };
    if ( base(-5,cst) &&
            q(-4,"prl_edvi prl_mnvi mest_vi mest_3e") &&
            q(-3,"prl_edvi prl_mnvi mest_vi") &&
            q(-2,"suw_edvi suw_mnvi") &&
            w(-1,"на") && s(-5,-1) )
    { l[i]=omo2; Z[88]++; if(dbg){print "Z88"}; continue };
    if ( base(-3,cst) &&
            w(-2,"на") &&
            q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") && s(-3,-1) )
    { l[i]=omo2; Z[89]++; if(dbg){print "Z89"}; continue };
    if ( vvb(-6,-1) &&
        base(vvn-2,cst) &&
           w(vvn-1,"на") &&
           q(vvn,"prl_edvi prl_mnvi mest_vi mest_3e") && s(vvn-2,vvn-1) )
    { l[i]=omo2; Z[90]++; if(dbg){print "Z90"}; continue };
    if ( w(-1,"на") &&
        bf(1,3,cst) && s(-1,bfn-1) )
    { l[i]=omo2; Z[91]++; if(dbg){print "Z91"}; continue };
    if ( base(-5,cst) &&
       pre_tv(-4) &&
            q(-3,"mest_tv suw_edtv suw_mntv") &&
            q(-2,"mest_vi suw_edvi suw_mnvi mest_3e") &&
            w(-1,"на") && s(-5,-1) )
    { l[i]=omo2; Z[92]++; if(dbg){print "Z92"}; continue };
    if ( base(-4,cst) &&
       pre_vi(-3) &&
            q(-2,"suw_edvi suw_mnvi") &&
            w(-1,"на") && s(-4,-1) )
    { l[i]=omo2; Z[93]++; if(dbg){print "Z93"}; continue };

    cst="взяться";
    if ( base(-3,cst) &&
          qxs(-1,"за","мой твой наш ваш их свой этот тотш её их его") )
    { l[i]=omo1; Z[94]++; if(dbg){print "Z94"}; continue };
    if ( base(-3,cst) &&
            w(-2,"за") &&
       isname(-1) && s(-3,-1) )
    { l[i]=omo1; Z[95]++; if(dbg){print "Z95"}; continue };
    if ( base(-2,cst) &&
            w(-1,"за") &&
      sz_iili(1) &&
         base(2,"спалить сжечь сровнять снести") && s(-2,1) )
    { l[i]=omo1; Z[96]++; if(dbg){print "Z96"}; continue };
    if ( wb(-5,-3,"нужно пора") &&
          w(-2,cst) &&
          w(-1,"за") && s(wbn,-1) )
    { l[i]=omo1; Z[97]++; if(dbg){print "Z97"}; continue };
   if ( base(-3,"хотеть") &&
           w(-2,cst) &&
           w(-1,"за") && s(-3,-1) )
    { l[i]=omo1; Z[98]++; if(dbg){print "Z98"}; continue };
   cst1="когда крепко наконец основательно плотно";
    if ( w(-3,cst1) &&
      base(-2,cst) &&
         w(-1,"за") && s(-3,-1) )
    { l[i]=omo1; Z[99]++; if(dbg){print "Z99"}; continue };
    if ( w(-3,cst1) &&
      base(-2,cst) &&
         w(-1,"за") &&
         w(1,"новый мой твой наш ваш их свой этот тотш её их его") && s(-3,0) )
    { l[i]=omo1; Z[100]++; if(dbg){print "Z100"}; continue };
    if ( base(-2,cst) &&
            w(-1,"за") &&
            w(1,cst1) && s(-2,0) )
    { l[i]=omo1; Z[101]++; if(dbg){print "Z101"}; continue };

    cst="взяться схватиться ухватиться";
    if ( base(-2,cst) &&
            w(-1,"за") && s(-2,-1) )
    { l[i]=omo2; Z[102]++; if(dbg){print "Z102"}; continue };
    if ( base(-3,cst) &&
            q(-2,"suw_edvi suw_mnvi") &&
            w(-1,"за") && s(-3,-1) )
    { l[i]=omo2; Z[103]++; if(dbg){print "Z103"}; continue };
    if ( base(-4,cst) &&
            q(-3,"prl_edvi prl_mnvi mest_vi mest_3e") &&
            q(-2,"suw_edvi suw_mnvi") &&
            w(-1,"за") && s(-4,-1) )
    { l[i]=omo2; Z[104]++; if(dbg){print "Z104"}; continue };
    if ( base(-5,cst) &&
            q(-4,"prl_edvi prl_mnvi mest_vi mest_3e") &&
            q(-3,"prl_edvi prl_mnvi mest_vi") &&
            q(-2,"suw_edvi suw_mnvi") &&
            w(-1,"за") && s(-5,-1) )
    { l[i]=omo2; Z[105]++; if(dbg){print "Z105"}; continue };
    if ( base(-3,cst) &&
            w(-2,"за") &&
            q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") && s(-3,-1) )
    { l[i]=omo2; Z[106]++; if(dbg){print "Z106"}; continue };
    if ( vvb(-6,-1) &&
        base(vvn-2,cst) &&
           w(vvn-1,"за") &&
           q(vvn,"prl_edvi prl_mnvi mest_vi mest_3e") && s(vvn-2,vvn-1) )
    { l[i]=omo2; Z[107]++; if(dbg){print "Z107"}; continue };
    if ( w(-1,"за") &&
        bf(1,3,cst) && s(-1,bfn-1) )
    { l[i]=omo2; Z[108]++; if(dbg){print "Z108"}; continue };
    if ( base(-5,cst) &&
       pre_tv(-4) &&
            q(-3,"mest_tv suw_edtv suw_mntv") &&
            q(-2,"mest_vi suw_edvi suw_mnvi mest_3e") &&
            w(-1,"за") && s(-5,-1) )
    { l[i]=omo2; Z[109]++; if(dbg){print "Z109"}; continue };

    cst="нападать нападение напасть";
    if ( base(-2,cst) &&
            w(-1,"на") && s(-2,-1) )
    { l[i]=omo1; Z[110]++; if(dbg){print "Z110"}; continue };
    if ( base(-3,cst) &&
            w(-2,"на") &&
            q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") && s(-3,-1) )
    { l[i]=omo1; Z[111]++; if(dbg){print "Z111"}; continue };
    if ( w(-1,"на") &&
        bf(1,3,cst) && s(-1,bfn-1) )
    { l[i]=omo1; Z[112]++; if(dbg){print "Z112"}; continue };

    cst="подкоп";
    if ( base(-2,cst) &&
            w(-1,"под") && s(-2,-1) )
    { l[i]=omo1; Z[113]++; if(dbg){print "Z113"}; continue };
    if ( base(-3,cst) &&
            w(-2,"под") &&
            q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") && s(-3,-1) )
    { l[i]=omo1; Z[114]++; if(dbg){print "Z114"}; continue };
    if ( w(-1,"под") &&
        bf(1,3,cst) && s(-1,bfn-1) )
    { l[i]=omo1; Z[115]++; if(dbg){print "Z115"}; continue };

    cst="вешать закрывать закрываться закрыть закрыться замкнуть замыкать запереть запереться запирать запираться застегнуть застёгивать захлопнуть захлопнуться захлопывать захлопываться защёлкнуть защёлкнуться ключ навесить нащупать нащупывать отмычка положить посадить прятать садить сажать сплести сплетать спрятать сцепить сцеплять упрятать упрятывать";
    if ( base(-2,cst) &&
            w(-1,"под") && s(-2,-1) )
    { l[i]=omo2; Z[116]++; if(dbg){print "Z116"}; continue };
    if ( base(-3,cst) &&
            q(-2,"suw_edvi suw_mnvi mest_vi mest_3e") &&
            w(-1,"под") && s(-3,-1) )
    { l[i]=omo2; Z[117]++; if(dbg){print "Z117"}; continue };
    if ( base(-3,cst) &&
            w(-2,"под") &&
            q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") && s(-3,-1) )
    { l[i]=omo2; Z[118]++; if(dbg){print "Z118"}; continue };
    if ( w(-1,"под") &&
        bf(1,3,cst) && s(-1,bfn-1) )
    { l[i]=omo2; Z[119]++; if(dbg){print "Z119"}; continue };

    cst="приидти прийти приходить";
    if ( base(-2,cst) &&
            w(-1,"под") && s(-2,-1) )
    { l[i]=omo1; Z[120]++; if(dbg){print "Z120"}; continue };
    if ( base(-3,cst) &&
            w(-2,"под") &&
            q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") && s(-3,-1) )
    { l[i]=omo1; Z[121]++; if(dbg){print "Z121"}; continue };
    if ( w(-1,"под") &&
        bf(1,3,cst) && s(-1,bfn-1) )
    { l[i]=omo1; Z[122]++; if(dbg){print "Z122"}; continue };
    if ( base(-4,cst) &&
            q(-3,"pre_da") &&
            q(-2,"mest_da suw_edda suw_mnda") &&
            w(-1,"под") && s(-4,-1) )
    { l[i]=omo1; Z[123]++; if(dbg){print "Z123"}; continue };
    if ( base(-6,cst) &&
            q(-5,"suw_edvi suw_mnvi mest_vi mest_3e") &&
            q(-4,"nar_napr nar_spos") &&
            q(-3,"pre_da") &&
            q(-2,"mest_da suw_edda suw_mnda") &&
            w(-1,"под") && s(-4,-1) )
    { l[i]=omo1; Z[124]++; if(dbg){print "Z124"}; continue };
    if ( base(-4,cst) &&
            q(-3,"pre_tv") &&
            q(-2,"mest_tv suw_edtv suw_mntv") &&
            w(-1,"под") && s(-4,-1) )
    { l[i]=omo1; Z[125]++; if(dbg){print "Z125"}; continue };

    if ( base(-2,"решить решение велеть приказать") &&
            w(-1,"демонтировать") && s(-2,-1) )
    { l[i]=omo1; Z[126]++; if(dbg){print "Z126"}; continue };

    cst="все всё назад обратно";
    if ( qxs(-1,cst,"в") && p(xsn-1,",") && p(0) )
    { l[i]=omo1; Z[127]++; if(dbg){print "Z127"}; continue };

    if ( p(-2,",") && w(-1,"в") && p(0) )
    { l[i]=omo1; Z[128]++; if(dbg){print "Z128"}; continue };

    cst="бежать брать бросать бросить броситься вбегать вбежать везти вернуть вернуться вести взять влетать влететь вливаться вломиться вовозить возвратить возвратиться возвращать возвращаться войти ворваться впускать впустить врываться вступить входить въезжать въехать вывезти вывести выводить вырваться гнать двигаться двинуться доставить доставлять ехать забирать забираться забрать забраться забредать забрести завести заглянуть заезжать заехать зайти заключить закрывать закрыть залезть заманивать заманить занести заносить засадить засесть заточить заходить зачастить зашагать заявиться звать идти лазить лезть лететь наведаться наведываться наезжать направить направиться направляться нести опаздывать опоздать отвезти отвести отводить отвозить открывать открываться открыть открыться отогнать отправить отправиться отправлять отправляться отпускать отступать отступить передавать передать переехать переместить перенести перенестись переносить переноситься переселить переселиться переселять переселяться поверить повести подниматься подняться поехать пожаловать пойти полететь поместить понести попадать попасть посадить послать поспешать поспешить посылать потащить потопать поторопиться потянуть пошагать прибежать прибывать прибыть привезти привести приводить привозить привозиться приволочь пригласить приглашать приезжать приехать приидти прийти примчаться принести приносить принять притащить приходить пробраться провести проводить проехать пройти прокрасться пролезть проникать проникнуть пропускать пропустить прорваться прорываться проскальзывать проскользнуть проходить пускать пустить развалить рвануть рваться сбежать свезти свозить сжать сжимать скакать скрестить скрещивать слать слетать смотаться снести сносить собираться сопровождать спешить спускаться спуститься тащиться телепортировать телепортироваться торопиться убегать убежать увезти увести уводить удалиться удерживать удирать удрать уезжать уехать уйти умчать умчаться унести уносить ускакать утаскивать утащить ходить шагать шмыгать шмыгнуть явиться";

    cst1="булавка ключ отмычка сверло";
    if ( bb(-7,-4,cst1) && s(bbn,-1) &&
       base(-3,cst) &&
          w(-2,"в") &&
          q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") )
    { l[i]=omo2; Z[129]++; if(dbg){print "Z129"}; continue };
    if ( bb(-6,-3,cst1) && s(bbn,-1) &&
       base(-2,cst) &&
          w(-1,"в") )
    { l[i]=omo2; Z[130]++; if(dbg){print "Z130"}; continue };

    if ( base(-2,cst) &&
            w(-1,"в") && s(-2,-1) )
    { l[i]=omo1; Z[131]++; if(dbg){print "Z131"}; continue };
    if ( base(-3,cst) &&
            w(-2,"в во") &&
            q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") && s(-3,-1) )
    { l[i]=omo1; Z[132]++; if(dbg){print "Z132"}; continue };
    if ( base(-4,cst) &&
            q(-3,"prl_edvi prl_mnvi mest_vi mest_3e prq_edvi prq_mnvi") &&
            q(-2,"suw_edvi suw_mnvi") &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo1; Z[133]++; if(dbg){print "Z133"}; continue };
    if ( base(-7,cst) &&
       pre_pr(-6) &&
            q(-5,"suw_edpr suw_mnpr") &&
            q(-4,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") &&
            q(-3,"suw_edvi suw_mnvi") &&
            w(-2,"в") &&
            q(-1,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") && s(-7,-1) )
    { l[i]=omo1; Z[134]++; if(dbg){print "Z134"}; continue };
    if ( base(-5,cst) &&
            q(-4,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") &&
            q(-3,"suw_edvi suw_mnvi") &&
            w(-2,"в") &&
            q(-1,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") && s(-5,-1) )
    { l[i]=omo1; Z[135]++; if(dbg){print "Z135"}; continue };
    if ( base(-6,cst) &&
            q(-5,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") &&
            q(-4,"suw_edvi suw_mnvi") &&
            w(-3,"в") &&
            q(-2,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") &&
            q(-1,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi") && s(-6,-1) )
    { l[i]=omo1; Z[136]++; if(dbg){print "Z136"}; continue };
    if ( base(-3,cst) &&
            q(-2,"suw_edvi suw_mnvi suw_edim suw_mnim mest_vi mest_im mest_3e gl_in prl_kred_sr nar_vrem nar_mest qast name_vi_sy isname") &&
            w(-1,"в") && s(-3,-1) )
    { l[i]=omo1; Z[137]++; if(dbg){print "Z137"}; continue };
    if ( base(-5,cst) &&
            q(-4,"suw_edvi suw_mnvi suw_edim suw_mnim mest_vi mest_im mest_3e gl_in prl_kred_sr nar_vrem nar_mest qast name_vi_sy isname") &&
            q(-3,"sz_iili") &&
            q(-2,"suw_edvi suw_mnvi suw_edim suw_mnim mest_vi mest_im mest_3e gl_in prl_kred_sr nar_vrem nar_mest qast name_vi_sy isname") &&
            w(-1,"в") && s(-5,-1) )
    { l[i]=omo1; Z[138]++; if(dbg){print "Z138"}; continue };
    if ( base(-4,cst) &&
            q(-3,"suw_edvi suw_mnvi suw_edim suw_mnim mest_vi mest_3e gl_in prl_kred_sr nar_vrem nar_mest qast name_vi_sy isname") &&
            q(-2,"nar_napr nar_vrem nar_spos prl_kred_sr") &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo1; Z[139]++; if(dbg){print "Z139"}; continue };
    if ( base(-4,cst) &&
            q(-3,"qast") &&
            q(-2,"suw_edvi suw_mnvi mest_vi mest_3e gl_in prl_kred_sr nar_vrem nar_mest qast") &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo1; Z[140]++; if(dbg){print "Z140"}; continue };
    if ( base(-4,cst) &&
            q(-3,"suw_edvi suw_mnvi") &&
            q(-2,"suw_edro suw_mnro prl_kred_sr") &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo1; Z[141]++; if(dbg){print "Z141"}; continue };
    if ( base(-4,cst) &&
            q(-3,"suw_edvi suw_mnvi mest_vi mest_3e gl_in prl_kred_sr nar_vrem nar_mest qast") &&
            w(-2,"в во") &&
            q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") && s(-4,-1) )
    { l[i]=omo1; Z[142]++; if(dbg){print "Z142"}; continue };
    if ( base(-6,cst) &&
            q(-5,"nar_vrem prl_kred_sr") &&
       pre_da(-4) &&
            q(-3,"suw_edda suw_mnda mest_da") &&
            w(-2,"в во") &&
            q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") && s(-6,-1) )
    { l[i]=omo1; Z[143]++; if(dbg){print "Z143"}; continue };
    if ( base(-5,cst) &&
            q(-4,"nar_vrem prl_kred_sr") &&
       pre_da(-3) &&
            q(-2,"suw_edda suw_mnda mest_da") &&
            w(-1,"в") && s(-5,-1) )
    { l[i]=omo1; Z[144]++; if(dbg){print "Z144"}; continue };
    if ( base(-4,cst) &&
       pre_da(-3) &&
            q(-2,"mest_da suw_edda suw_mnda") &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo1; Z[145]++; if(dbg){print "Z145"}; continue };
    if ( w(-1,"в") &&
        bf(1,3,cst) && s(-1,bfn-1) && Qf(1,bfn,"sz_iili") )
    { l[i]=omo1; Z[146]++; if(dbg){print "Z146"}; continue };
    if ( w(-2,"в во") &&
         q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") &&
        bf(1,3,cst) && s(-2,bfn-1) && Qf(1,bfn,"sz_iili") )
    { l[i]=omo1; Z[147]++; if(dbg){print "Z147"}; continue };
    if ( base(-6,cst) &&
            q(-5,"suw_edvi suw_mnvi mest_vi mest_3e") &&
            q(-4,"nar_napr nar_spos") &&
            q(-3,"pre_da") &&
            q(-2,"mest_da suw_edda suw_mnda") &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo1; Z[148]++; if(dbg){print "Z148"}; continue };
    if ( base(-5,cst) &&
            q(-4,"nar_napr nar_vrem nar_spos prl_kred_sr") &&
            q(-3,"pre_tv") &&
            q(-2,"mest_tv suw_edtv suw_mntv") &&
            w(-1,"в") && s(-5,-1) )
    { l[i]=omo1; Z[149]++; if(dbg){print "Z149"}; continue };
    if ( base(-4,cst) &&
            q(-3,"pre_tv") &&
            q(-2,"mest_tv suw_edtv suw_mntv") &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo1; Z[150]++; if(dbg){print "Z150"}; continue };
    if ( base(-4,cst) &&
            q(-3,"pre_vi") &&
            q(-2,"mest_vi suw_edvi suw_mnvi") &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo1; Z[151]++; if(dbg){print "Z151"}; continue };
    if ( base(-4,cst) &&
            q(-3,"pre_pr") &&
            q(-2,"mest_pr suw_edpr suw_mnpr") &&
            w(-1,"в") && s(-4,-1) )
    { l[i]=omo1; Z[152]++; if(dbg){print "Z152"}; continue };
    if ( base(-5,cst) &&
            q(-4,"mest_vi suw_edvi suw_mnvi") &&
            q(-3,"pre_ro") &&
            q(-2,"mest_ro suw_edro suw_mnro") &&
            w(-1,"в") && s(-5,-1) )
    { l[i]=omo1; Z[153]++; if(dbg){print "Z153"}; continue };
    if ( base(-6,cst) &&
            q(-5,"prl_edvi prl_mnvi prq_edvi prq_mnvi mest_vi mest_3e") &&
            q(-4,"suw_edvi suw_mnvi") &&
            q(-3,"pre_ro") &&
            q(-2,"mest_ro suw_edro suw_mnro") &&
            w(-1,"в") && s(-6,-1) )
    { l[i]=omo1; Z[154]++; if(dbg){print "Z154"}; continue };
    if ( base(-3,cst) &&
            q(-2,"mest_da suw_edda suw_mnda") &&
            w(-1,"в") && s(-3,-1) )
    { l[i]=omo1; Z[155]++; if(dbg){print "Z155"}; continue };

    if ( q(-3,"mest_da suw_edda suw_mnda") &&
         q(-2,"mod_ed mod_mn mod_bz") &&
         w(-1,"в") && s(-3,-1) )
    { l[i]=omo1; Z[156]++; if(dbg){print "Z156"}; continue };

    cst="аллея бегство визит возвращение ворота вход дверь дорога доставка заключение заточение переезд переход поездка прибытие приглашение приезд проникновение путь тропа";
    if ( base(-2,cst) &&
            w(-1,"в") && s(-2,-1) )
    { l[i]=omo1; Z[157]++; if(dbg){print "Z157"}; continue };
    if ( base(-3,cst) &&
            q(-2,"suw_edro suw_mnro mest_ro mest_3e qast") &&
            w(-1,"в") && s(-3,-1) )
    { l[i]=omo1; Z[158]++; if(dbg){print "Z158"}; continue };
    if ( base(-3,cst) &&
            w(-2,"в") &&
            q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") && s(-3,-1) )
    { l[i]=omo1; Z[159]++; if(dbg){print "Z159"}; continue };


    cst1="поменять сменить";
    cst2="владелец имя название хозяин";
    if ( bf(1,5,cst1) && Qf(1,bfn-1,"sz_iili pre_any") &&
         bf(bfn+1,bfn+3,cst2) && s(0,bfn-1) )
    { l[i]=omo1; Z[160]++; if(dbg){print "Z160"}; continue };

    cst1="вырезать вырубать вырубить высекать высечь";
    cst2="гора камень скала";
    if ( bf(1,5,cst1) && Qf(1,bfn-1,"sz_iili pre_any") &&
          w(bfn+1,"в из") &&
         bf(bfn+2,bfn+4,cst2) && s(0,bfn-1) )
    { l[i]=omo1; Z[161]++; if(dbg){print "Z161"}; continue };

    cst1="брать взять";
    cst2="скрепить";
    if ( base(-1,cst1) &&
           (w(1,"и")||sc(0,",")) &&
           bf(2,4,cst2) &&
            q(bfn+1,"mest_tv suw_edtv suw_mntv") && s(0,bfn-1) )
    { l[i]=omo2; Z[162]++; if(dbg){print "Z162"}; continue };

    cst1="держать";
    cst2="закрыть запереть открыть";
    if ( base(-2,cst1) &&
         base(-1,cst2) &&
       isname(1) && s(-2,0) )
    { l[i]=omo1; Z[163]++; if(dbg){print "Z163"}; continue };

    cst="замка замков";
    if ( w(-3,"из") &&
         w(-2,cst) &&
         w(-1,"в") && s(-3,-1) )
    { l[i]=omo2; Z[164]++; if(dbg){print "Z164"}; continue };

    if ( w(-3,"в") &&
         q(-2,"suw_edvi suw_mnvi") &&
         w(-1,"под") && s(-3,-1) )
    { l[i]=omo2; Z[165]++; if(dbg){print "Z165"}; continue };
    if ( w(-1,"под") &&
         w(1,"в") &&
         q(2,"suw_edvi suw_mnvi") && s(-1,1) )
    { l[i]=omo2; Z[166]++; if(dbg){print "Z166"}; continue };

    cst="передавать передать получить принять";
    if ( ( qxs(-1,"в","дар подарок наследство собственность распоряжение")||
           qxs(-1,"во","владение")||
           qxs(-1,"в","своё свои","владение владения")||
           qxs(-1,"под","управление")||
           qxs(-1,"под","своё","управление") ) && bb(xsn-4,xsn-1,cst) && s(bbn,xsn-1) )
    { l[i]=omo1; Z[167]++; if(dbg){print "Z167"}; continue };

    if ( base(1,"ходить") &&
         (qxs(2,"на","ушах")||
            w(2,"ходуном") ) && s(0,1) )
    { l[i]=omo1; Z[168]++; if(dbg){print "Z168"}; continue };
    if ( bb(-3,-1,"знать") && s(bbn,-1) &&
        qxs(1,"как","ваши наши свои","пять","пальцев") )
    { l[i]=omo1; Z[169]++; if(dbg){print "Z169"}; continue };

    if ( base(-3,"открывать открываться") &&
            w(-2,"перед") &&
            q(-1,"suw_edtv suw_mntv mest_tv") && s(-3,-1) )
    { l[i]=omo1; Z[170]++; if(dbg){print "Z170"}; continue };

    cst="потянуть тянуть";
    if ( w(1,"не") &&
      base(2,cst) && s(0,1) )
    { l[i]=omo1; Z[171]++; if(dbg){print "Z171"}; continue };
    cst1="башня время сила стена";
    if ( base(1,cst) &&
         base(2,cst1) && s(0,1) )
    { l[i]=omo1; Z[172]++; if(dbg){print "Z172"}; continue };
    if ( q(1,"suw_edda suw_mnda mest_da") &&
         w(2,"не") &&
      base(3,cst) && s(0,2) )
    { l[i]=omo1; Z[173]++; if(dbg){print "Z173"}; continue };
    if ( w(-1,"на") &&
         q(1,"suw_edim suw_mnim mest_im") &&
         w(2,"не") &&
      base(3,cst) && s(-1,2) )
    { l[i]=omo1; Z[174]++; if(dbg){print "Z174"}; continue };
    if ( base(1,cst) &&
            q(2,"suw_edro suw_mnro mest_ro mest_3e") &&
            w(3,"к") && s(0,2) )
    { l[i]=omo1; Z[175]++; if(dbg){print "Z175"}; continue };
    if ( bf(1,5,cst) && Qf(1,bfn-1,"sz_iili pre_any") &&
          w(bfn+1,"из") &&
          q(bfn+2,"suw_edro suw_mnro mest_ro mest_3e") && s(0,bfn+1) )
    { l[i]=omo1; Z[176]++; if(dbg){print "Z176"}; continue };
    if ( bf(1,3,cst) && Qf(1,bfn-1,"sz_iili pre_any") &&
          q(bfn+1,"suw_edvi suw_mnvi mest_vi mest_3e") &&
          q(bfn+2,"nar_vrem nar_mest nar_napr prl_kred_sr") && s(0,bfn+1) )
    { l[i]=omo1; Z[177]++; if(dbg){print "Z177"}; continue };

    cst="затягивать затягиваться затянуть затянуться";
    cst1="дым дымка паутина пелена туман";
    if ( base(1,cst) &&
         base(2,cst1) && s(0,1) )
    { l[i]=omo1; Z[178]++; if(dbg){print "Z178"}; continue };

    cst="освободить освобождать";
    cst1="захватчик оккупант осада";
    if ( base(-1,cst) &&
            w(1,"от") &&
         base(2,cst1) && s(-1,1) )
    { l[i]=omo1; Z[179]++; if(dbg){print "Z179"}; continue };
    if ( base(-1,cst) &&
            w(1,"от") &&
            q(2,"prl_edro prl_mnro prq_edro prq_mnro") &&
         base(3,cst1) && s(-1,2) )
    { l[i]=omo1; Z[180]++; if(dbg){print "Z180"}; continue };

    cst0="агонизировать арендовать атаковать беречь блистать брать будоражить вверить вверять венчать ветшать вздрогнуть вздыматься взламывать взлететь взломать взять возвести возводить возвышаться воздвигать воздвигаться воздвигнуть воздвигнуться вознестись возникать возникнуть возноситься вооружать вооружить восстанавливать восстановить всполошиться выключать выключить выкупить вылепить вымереть вырастать вырастить выситься выстраивать выстроить гореть доламывать завещать завоевать завоёвывать задрожать зажечь заложить занимать занять заполонить запустить запылать засыпать затихать затихнуть захватить захватывать защитить защищать изобразить лепить летать маячить меблировать навестить навещать наводнить назвать называть называться наполнить наполниться наполнять наполняться натопить обветшать облететь обложить обнести обносить обогнуть обойти оборонить оборонять оборудовать обрушаться обрушиться обставить обходить обшарить объявиться обыскать обыскивать огибать ограбить ограждать оккупировать околдовать окрестить окружать окружить окутать окутывать опустеть осадить осаждать осенить осквернить осквернять основать основывать отапливать отвоевать отвоёвывать отдавать отдать отстаивать отстоять отстраивать отстроить охранять охраняться оцепить оцеплять ощущать парить пасть перебудить перебудоражить переполошить перестроить повергать повергнуть пограбить погружать погружаться поджечь подниматься подняться пожаловать покидать покинуть поколебать покорить покорять полуразвалиться полуразорить полуразрушить порушить посетить построить править предавать предать предначертать представать представляться предстать приближаться принадлежать притихнуть пробудиться прозываться промораживать проморозить протопить пылать разбудить разваливать развалить разграбить разорить разорять разрушить раскатать раскатывать распологаться расположить распололожиться реставрировать рухнуть рушиться сгореть сдавать сдать сжечь скрываться скрыться снести сносить содержать создавать создать соорудить сооружать сооружаться сотрясать сотрясти спать срыть стереть строить строиться существовать удерживать украсить украшать укрепить унаследовать усладить услаждать штурмовать";
    if ( base(-1,cst0) && s(-1) )
    { l[i]=omo1; Z[181]++; if(dbg){print "Z181"}; continue };
    if ( base(-3,cst0) &&
            q(-2,"nar_mest") &&
            q(-1,"prl_edvi prl_mnvi mest_vi mest_3e") && s(-3,-1) )
    { l[i]=omo1; Z[182]++; if(dbg){print "Z182"}; continue };
    if ( base(-2,cst0) &&
            q(-1,"nar_mest prl_edvi prl_mnvi mest_vi mest_3e qast") && s(-2,-1) )
    { l[i]=omo1; Z[183]++; if(dbg){print "Z183"}; continue };
    if ( base(-3,cst0) &&
            q(-2,"nar_mest prl_edvi prl_mnvi mest_vi mest_3e qast") &&
            q(-1,"nar_mest prl_edvi prl_mnvi mest_vi qast") && s(-3,-1) )
    { l[i]=omo1; Z[184]++; if(dbg){print "Z184"}; continue };
    if ( bf(1,3,cst0) && s(0,bfn-1) && Qf(1,bfn-1,"sz_iili pre_any") )
    { l[i]=omo1; Z[185]++; if(dbg){print "Z185"}; continue };
    if ( q(1,"mest_im suw_edim suw_mnim") && s(0) &&
       qxs(2,"так","и","не") &&
      base(xsn+1,cst0) && s(xsn+1) )
    { l[i]=omo1; Z[186]++; if(dbg){print "Z186"}; continue };

    if ( base(-3,cst0) &&
       pre_vi(-2) &&
            q(-1,"suw_edvi suw_mnvi") && s(-3,-1) )
    { l[i]=omo1; Z[187]++; if(dbg){print "Z187"}; continue };
    if ( base(-3,cst0) &&
       pre_ro(-2) &&
            q(-1,"suw_edro suw_mnro") && s(-3,-1) )
    { l[i]=omo1; Z[188]++; if(dbg){print "Z188"}; continue };
    if ( base(-4,cst0) &&
       pre_ro(-3) &&
            q(-2,"prl_edro prl_mnro") &&
            q(-1,"suw_edro suw_mnro") && s(-4,-1) )
    { l[i]=omo1; Z[189]++; if(dbg){print "Z189"}; continue };
    if ( base(-3,cst0) &&
       pre_pr(-2) &&
            q(-1,"suw_edpr suw_mnpr") && s(-3,-1) )
    { l[i]=omo1; Z[190]++; if(dbg){print "Z190"}; continue };
    if ( base(-4,cst0) &&
       pre_pr(-3) &&
            q(-2,"suw_edpr suw_mnpr") &&
            q(-1,"prl_edvi prq_edvi") && s(-4,-1) )
    { l[i]=omo1; Z[191]++; if(dbg){print "Z191"}; continue };

    cst9="активировать болтаться вешать взламывать взломать висеть врезать вскрывать вскрыть вспарывать вспороть вставить выбивать выбить вываливаться вывалиться вывернуть выворачивать выключать выключить выламывать вылетать вылететь выломать вырвать вырезать вырывать высверлить вышибить деактивировать демонтировать дёргать дёрнуть заблокировать загреметь загрохотать задёргивать задёрнуть заедать заесть зазвенеть заклинить закодировать закрепить закрывать закрываться закрыть заменить заменять замкнуть замыкать запантетовать запереть запирать запрограммировать заржаветь заржавить заскрежетать заскрипеть застегнуть застёгивать затеребить затянуть зафиксировать захлопнуть захлопнуться захлопывать защёлкивать защёлкиваться защёлкнуть защёлкнуться звякнуть изготавливать изготовить испортить клацать клацнуть ключ ковать ковырять кодировать конфисковать лязгать лязгнуть менять мяукать мяукнуть навесить навешивать надеть налагать настроить нащупать нащупывать оплавить отворять откидывать откинуть открывать открываться открыть открыться отлететь отмыкать отмычка отомкнуть оторвать отпереть отпирать отравить отрывать отстрелить отцепить отцеплять отшвырнуть отщёлкивать отщёлкиваться отщёлкнуть ощупать ощупывать патентовать переделать перекосить перекрутить перекручивать перепиливать перепилить перерубить пилить повернуть повесить поворачивать погладить подаваться податься поддаваться поддаться подогнать подпиливать подпилить подпортить подцепить подцеплять подёргать покорять покорёжить покрасить покрутить поломать поменять потеребить потрогать потянуть приваривать приварить привесить привешивать привинтить привинчивать принести приносить приоткрыть провернуть провернуться проворачивать проворачиваться программировать проржаветь просверлить прострелить разбирать разблокировать разворотить разломать разломаться размыкать разнести разносить разобрать разомкнуть разработать разрезать разрушать раскодировать раскрываться раскурочивать раскурочить расплавить расстегнуть расстёгивать резать роботизировать рушить сбивать сбить свисать скрежетать скрежетнуть скрипеть скрипнуть скрутить скручивать сломать сломаться смазать смазывать сменить смонтировать собрать сорвать спаять спиливать спилить сработать срезать срывать теребить тянуть укомплектовать установить устоять хрустнуть щёлкать щёлкнуть";
    if ( base(-1,cst9) && s(-1) )
    { l[i]=omo2; Z[192]++; if(dbg){print "Z192"}; continue };
    if ( base(-3,cst9) &&
            q(-2,"prl_edvi prl_mnvi mest_vi mest_3e qast") &&
            q(-1,"prl_edvi prl_mnvi mest_vi qast") && s(-3,-1) )
    { l[i]=omo2; Z[193]++; if(dbg){print "Z193"}; continue };
    if ( base(-2,cst9) &&
            q(-1,"prl_edvi prl_mnvi mest_vi mest_3e qast nar_mest nar_cel nar_napr") && s(-2,-1) )
    { l[i]=omo2; Z[194]++; if(dbg){print "Z194"}; continue };
    if ( bf(1,3,cst9) && s(0,bfn-1) && Qf(1,bfn-1,"sz_iili pre_any") )
    { l[i]=omo2; Z[195]++; if(dbg){print "Z195"}; continue };

    if ( base(-3,cst9) &&
       pre_vi(-2) &&
            q(-1,"suw_edvi suw_mnvi mest_vi") && s(-3,-1) )
    { l[i]=omo2; Z[196]++; if(dbg){print "Z196"}; continue };
    if ( base(-3,cst9) &&
       pre_tv(-2) &&
            q(-1,"suw_edtv suw_mntv mest_tv") && s(-3,-1) )
    { l[i]=omo2; Z[197]++; if(dbg){print "Z197"}; continue };
    if ( base(-3,cst9) &&
       pre_pr(-2) &&
            q(-1,"suw_edpr suw_mnpr mest_pr") && s(-3,-1) )
    { l[i]=omo2; Z[198]++; if(dbg){print "Z198"}; continue };

 }; # замок замки

 cst="ручка";
 if ( qxs(-1,"как","и") &&
     base(xsn-1,cst) && sc(xsn-1,",") &&
     base(1,cst0) )
 { l[i]=omo2; Z[199]++; if(dbg){print "Z199"}; continue };
 if ( sc(0,",") && q(1,"prq_any") && base(1,cst0) && s(1) )
 { l[i]=omo1; Z[200]++; if(dbg){print "Z200"}; continue };
 if ( sc(0,",") && q(1,"prq_any") && base(1,cst9) && s(1) )
 { l[i]=omo2; Z[201]++; if(dbg){print "Z201"}; continue };
 if ( q(-1,"prq_any") && base(-1,cst0) && s(-1) )
 { l[i]=omo1; Z[202]++; if(dbg){print "Z202"}; continue };
 if ( q(-1,"prq_any") && base(-1,cst9) && s(-1) )
 { l[i]=omo2; Z[203]++; if(dbg){print "Z203"}; continue };
 if ( q(-3,"prq_any") && base(-3,cst0) &&
 pre_ro(-2) &&
      q(-1,"suw_edro suw_mnro") && s(-3,-1) )
 { l[i]=omo1; Z[204]++; if(dbg){print "Z204"}; continue };
 if ( q(-4,"prq_any") && base(-4,cst0) &&
 pre_ro(-3) &&
      q(-2,"prl_edro prl_mnro") &&
      q(-1,"suw_edro suw_mnro") && s(-4,-1) )
 { l[i]=omo1; Z[205]++; if(dbg){print "Z205"}; continue };



 cst="акрополь баронство башня город двор дворец дворянство деревня деревушка дом домик замок земля имение казарма каземат княжество королевство кремль крепостца крепость море музей область окрестность особняк остров парк подземелье поселение принц резиденция сад село столица титул тюрьма угодья усадьба фонтан храм церковь цитадель";
 if ( q(1,"sz_iili") &&
   base(2,cst) && s(0,1) )
 { l[i]=omo1; Z[206]++; if(dbg){print "Z206"}; continue };
 if ( q(1,"sz_iili") &&
      w(2,"даже же") &&
   base(3,cst) && s(0,2) )
 { l[i]=omo1; Z[207]++; if(dbg){print "Z207"}; continue };
 if ( q(-1,"sz_iili") &&
   base(-2,cst) && s(-2,-1) )
 { l[i]=omo1; Z[208]++; if(dbg){print "Z208"}; continue };
 if ( sc(-1,",") && base(-1,cst) )
 { l[i]=omo1; Z[209]++; if(dbg){print "Z209"}; continue };
 if ( sc(0,",") && base(1,cst) )
 { l[i]=omo1; Z[210]++; if(dbg){print "Z210"}; continue };

 cst="ворота";
 if ( sc(0,",") &&
    base(1,cst) &&
       w(2,"которого") && s(1) )
 { l[i]=omo1; Z[211]++; if(dbg){print "Z211"}; continue };

 cst="ворота дверь клетка ключ петля целочка цепь";
 if ( q(1,"sz_iili") &&
   base(2,cst) && s(0,1) )
 { l[i]=omo2; Z[212]++; if(dbg){print "Z212"}; continue };
 if ( q(-1,"sz_iili") &&
   base(-2,cst) && s(-2,-1) )
 { l[i]=omo2; Z[213]++; if(dbg){print "Z213"}; continue };
 if ( sc(-1,",") && base(-1,cst) )
 { l[i]=omo2; Z[214]++; if(dbg){print "Z214"}; continue };
 if ( sc(0,",") && base(1,cst) )
 { l[i]=omo2; Z[215]++; if(dbg){print "Z215"}; continue };

 if ( isname(1) && s(0) )
 { l[i]=omo1; Z[216]++; if(dbg){print "Z216"}; continue };
 if ( w(1,"де дю фон ди да") &&
 isname(2) && s(0,1) )
 { l[i]=omo1; Z[217]++; if(dbg){print "Z217"}; continue };
 if ( w(1,"д") && sc(1,"[\x27’]") &&
 isname(2) && s(0) )
 { l[i]=omo1; Z[218]++; if(dbg){print "Z218"}; continue };
 if ( q(1,"pre_vi pre_ro pre_pr") &&
 isname(2) && s(0,1) && !(bb(-4,-1,"ключ ключик")) )
 { l[i]=omo1; Z[219]++; if(dbg){print "Z219"}; continue };
 if ( isname(-1) && ( (s(-2,-1) && sv(-2,")"))||(sc(-2,",") && s(-1)) ) )
 { l[i]=omo1; Z[220]++; if(dbg){print "Z220"}; continue };
 if ( isname(0) && s(-1) )
 { l[i]=omo1; Z[221]++; if(dbg){print "Z221"}; continue };

 }; delete wpos; book[b]=joinpat(l,sep,nf) };};                                ##_footer

};
