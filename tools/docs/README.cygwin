Использование скриптов под Windows
(также читайте tools.README)
Последняя версия файла тут: https://github.com/Balamoote/gtts-dic 

1. Скачать Сygwin https://www.cygwin.com/ и установить его, выбрав нужные пакеты. Большинство необходимого входит в состав базового
пакета, недостающее нужно доставить отдельно. Установка/удаление происходит через повторный запуск установщика.
ВАЖНО: установите в директорию, которую удобно находить, например C:\cygwin64
2. Обязательные пакеты: bash, sed, grep, gawk, dos2unix, uniq, iconv, vim
Для проверки наличия в системе всех нужных инструментов, дайте команду:

	command -v bash grep sed gawk dos2unix uniq iconv vim

Если какой-то пакет отсутствует, то нужно снова запустить установщик Cygwin, найти в списке нужный пакет и пометить его для установки,
т.е. изменить статус пакета со skip на номер последней версии пакета.

3. По вкусу можно доставить mc
4. Запускать cygwin нужно через Cygwin.bat
5. В Cygwin.bat добавить строку:

set LANG=ru_RU.utf8

_до_ команды запуска терминала (т.е. строка не должна быть последней) - иначе в терминале будут крякозябры.
6. Поместить в C:\cygwin64\home\user (домашняя папка) папку tools (например) с набором скриптов и словарных баз, текущим словарем lexx
и какой-нибудь книгой.
7. Запустить cygwin.bat, в появившемся окне терминала дать команды
	
	cd tools

Внутри tools/ дать команду:

	chmod 640 * && chmod 755 *.sh

8. Запустить скрипты, какие нужно. Например, ./check-lexx.sh
9. Пример обычной последовательности команд (перед именем исполняемого скрипта нужно давать "./"):

	./lexx2txt.sh TTS.lexx (создаем tts.txt)

	./check-lexx.sh (быстрая проверка и создание служебных файлов)

опция:	./check-lexx.sh book.fb2 (в дополнение к проверке словаря, создать  book.fb2.lexx - "частный" словарь для книги, если не нужно запускать
				скрипт ./get-words.sh)

	./get-words.sh book.fb2 (обработать книгу словарем имен и получить списки слов)

опция:  ./get-words.sh book.fb2 -ld (в дополнение к спискам слов, создать  book.fb2.lexx - "частный" словарь для книги)

[некие действия по изменению tts.txt]

	./txt2lexx.sh (преобразовать tts.txt в ttsin.lexx)

10. Переносим ttsin.lexx на смарт для импорта и book.fb2 для чтения.

Резюмируя: по сути по cygwin набор скриптов "просто работает". Единственно существенными действиями являются установка нужных пакетов
и настройка локали UTF-8.


Доп. примечания по проверочным файлам, результатам работы ./check-lexx.sh, в нормальном состоянии:
--------------------------------------------------------------
_2x-left.txt		должен быть пустым или его не должно быть
_2x-right-quick.txt	должен быть пустым или его не должно быть
_lost.txt   		должен быть пустым или его не должно быть
_error.txt	    	должен быть пустым или его не должно быть
_pat-error.txt		должен быть пустым или его не должно быть

Описание файлов в рабочей директории ПОСЛЕ запуска всех операций:
-----------------------------------------------------------------
TTS.lexx        			+ пользовательский файл LEXX словаря, также его можно получить командой ./txt2lexx.sh tts.txt TTS.lexx
_2x-left.txt		    	- список конфликтных ЛЕВЫХ частей шаблонов (кроме regex), результат работы ./check-lexx.sh
_2x-right-quick.txt	    	- список конфликтных ПРАВЫХ частей шаблонов с кавычками, быстрая проверка, результат работы ./check-lexx.sh
_lost.txt	    	    	- список "потерянных" шаблонов в сравнении с файлом wordbase0.txt
_pat-error.txt	    		- список шаблонов с ошибками (пропущенные или неверно поставленные кавычки)
check-lexx.sh	    	*	+ основной скрипт проверки, обрабатывает уже имеющийся файл tts.txt (опционально, также и книгу для частного словаря)
lexx2txt.sh	        	*	+ скрипт перевода lexx в txt
txt2lexx.sh	        	*	+ скрипт перевода lexx в txt
get-words.sh	    	*	+ получить списки: gw_*.list, запускать только после ./check-lexx.sh (опционально, выдает частный словарь книги)
addnames.sh	        	*	+ скрипт автоматического добавления имен из файлов gw_*.list (см. примечания)
add2lexx.sh	        	*	+ добавить шаблоны в gw_wordsin2lexx.list в tts.txt
scriptaux/_tts-noq.txt		- отсортированный файл словаря, с удаленным '" ' (начальная двойная кавычка и пробел)
scriptaux/_4awk-dq-rules.txt- служебный файл для ПОЛНОЙ проверки шаблонов с кавычками, результат работы ./check-lexx.sh
scriptaux/tts.pat	    	- служебный файл, результат команды sed -rf pattern.sed tts.txt > tts.pat
scriptdb/exclusion.pat  	+ файл исключений из проверочного словаря (мусор, результаты работы некоторых шаблонов, дефис)
scriptdb/wordbase0.txt  	+ проверочный словарь
tools.README		    	+ этот файл
tts.txt 			    	- текстовая форма словаря lexx, результат ./lexx2txt.sh TTS.lexx
00-10_**_.list	            - списки слов, создаваемые скриптом ./get-words.sh: новые слова и имена, обработанные слова. (см. примечания)
gw_wordsin2lexx.list	    - список шаблонов для добавления в tts.txt командой ./add2lexx.sh (автоматически удаляется при запуске ./add2lexx.sh)
scriptdb/namebase0.txt	    + база имен собственных в виде простых шаблонов (архив namebase-*.7z)
scriptdb/nameoverride.txt	+ база имен собственных, конфликтующих с шаблонами lexx (архив namebase-*.7z)
book.fb2		    	    - файл книги для обработки скриптами ./check-lexx.sh или ./get-words.sh
book.fb2.nam			    - бэкап исходной книги, создается скриптом ./get-words.sh
book.fb2.omo			    - бэкап книги перед обработкой омографов, создается скриптом ./omofix.sh
book.fb2.ini			    - бэкап исходной книги ("нулевая версия") перед обработкой имён-омографов, скриптом в работе
book.fb2.lexx			    - частный словарь книги book.fb2, создается скриптом ./get-words.sh
omofix.sh	    	    *	+ скрипт обработки омографов в книге, его настройки см. в нём самом
scriptomo/		        	+ папка со скриптами обработки омографов
nomo-*имя книги*	    	- папка для обработки имен-омографов, пока не используется 
z*.md5				        - вспомогательные md5 файлы, чтобы повторно не создавать уже имеющиеся файлы.


* - исполняемые скрипты
+ - обязательные для работы файлы
- - производные или необязательные файлы
0 - файл удаленный из стандартной поставки

