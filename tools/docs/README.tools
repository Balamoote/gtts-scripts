Описание скриптов сопутствующих файлов для работы со словарем + проставление ударений в именах
----------------------------------------------------------------------------------------------
# Последняя версия файла тут: https://github.com/Balamoote/gtts-dic 

Для работы необходимо иметь консоль linux с bash, grep, sed, gawk, dos2unix, uniq (обязательно)
и, желательно, но не обязательно, iconv, vim, mc, GNU parallel, spacy
Для проверки наличия в системе всех нужных инструментов, дайте команду:

	command -v bash grep sed gawk dos2unix uniq iconv mc md5sum vim parallel

или запустите скрипт ./all-in-one.sh

Если чего-либо не хватает, установить недостающее!

Альтернативно, подойдут консоли:
- cygwin https://cygwin.com/install.html - для Windows, + установить нужные пакеты cygwin и локаль UTF-8 (set LANG=ru_RU.utf8 в Cygwin.bat). Запуск терминала через Cygwin.bat!!!
(см. cygwin.README)
- termux https://f-droid.org/en/packages/com.termux/ - для Android, работает в bash, но только, если рабочая директория находится внутри home, т.е. на диске самого Termux
В storage/shared НЕ работает. (см. termux.README)
- консоль iOS (или как оно там на макбуках) - не проверялось, но должно работать, так же, как и в консоли Linux.

ВАЖНО: делаем бэкап TTS.lexx !

Использование:
--------------
1) по ссылке https://github.com/Balamoote/gtts-dic/archive/refs/heads/main.zip скачиваем свежий комплект "всего" и оттуда берем свежий словарь lexx
(далее этот файл упоминается под именем TTS.lexx). Или делаем экспорт словаря с телефона и помещаем его в директорию, куда распакованы архивы

	tools-per-se.7z
	namebase.7z
	wordbase0.7z
	omofix.7z

2) даем команду

	chmod 640 * && chmod 755 *.sh

	затем команду
	
	./lexx2txt.sh TTS.lexx

	(заменить в файле TTS.lexx ударение на символ одинарной кавычки и записать в tts.txt)

3) даем команду

	./check-lexx.sh (= ./all-in-one.sh -c , которая выпоняется автоматически при запуске с другими ключами))

	(делаем быструю проверку словаря lexx, попутно создаются служебные файлы)

ПРИМЕЧАНИЕ: можно сформировать частный словарь для определенной книги командой, дав имя файла книги как аргумент скрипта:

	./check-lexx.sh book.fb2 (или ./all-in-one.sh -l book.fb2)

	которая сформирует файл частного словаря book.fb2.lexx. Это можно сделать, если не планируется запуск скрипта ./get-words.sh
	ВНИМАНИЕ: в скрипт ./get-words.sh встроена идентичная опция: ./get-words.sh book.fb2 -ld выполнит ту же операцию.

4) даем команду

	./get-words.sh book.fb2
	или ./all-in-one.sh -g book.fb2 - собрать новые слова и имена в книге, без проставления ударений (они добавляются в базы через ./addnames.sh и ./add2lexx.sh)
	или ./all-in-one.sh -n book.fb2 - собрать слова и проставить ударения в именах в книге (дается уже после ручной обработки файлов с именами)
	
	, где book.fb2 - книга в формате fb2 (или txt), при этом создается бэкап book.fb2.nam, который автоматически восстанавливается при повторном запуске.

ПРИМЕЧАНИЕ: можно сформировать частный словарь для определенной книги командой, указав дополнительный ключ -ld:

        ./get-words.sh book.fb2 -ld (или ./all-in-one.sh -l book.fb2)

        которая сформирует файл частного словаря book.fb2.lexx

5) из файла 00_gw_new_words.txt можно добавить неизвестные обычные слова в словарь любым удобным способом, проще всего создать шаблон в нем самом (см.ниже).
6) в файлах 01/02_gw_nomen_new_sure/maybe.list можно ПРОСТАВИТЬ ударения одинарной кавычкой после гласной s=слово=сло'во=g
7) в файлах типа **_gw_**_in_simple.list можно ИСПРАВИТЬ ударение, проставленному в простых шаблонах lexx, добавив латинскую букву g в конец строки
8) в файлах типа **_gw_**_in_dq.list можно ИСПРАВИТЬ ударение, проставленному в "шаблонах с кавычками" lexx, добавив латинскую букву g в конец строки

ЗАМЕЧАНИЕ: всего формируется 10 файлов, в которых содержатся все слова с заглавной буквы в тексте, а 1 (00)файл с новыми словами с маленькой буквы. 2 файла в
элементом nomen (01 и 02) - это НОВЫЕ ВОЗМОЖНЫЕ имена собственные. Sure - означает, что слово было встречено НЕ в начале предложения, maybe - что в начале.
Элемент base означает, что речь идет о списке слов, содержащимся в базовом словаре (условно Хаген), где очень мало имен и названий. lexx - список, который
отсеивается словарем lexx, но без слов из "базового словаря". dq - означает шаблоны с кавычками (т.е. срабатывание на часть слова), simple - означает
"простой" шаблон, т.е. срабатывание на слово целиком.

9) после внесения правок в файлы *.list, даем команду, чтобы новые имена попали в базы

	./addnames.sh

	, при этом добавление шаблонов производит при следующих условиях:
		- в *_nomen_*.list в шаблоне присутствует символ одинарной кавычки (')
		- в *_nomen_*.list и *_simple_*.list в конце строки присутствует латинская буква g.

10) СНОВА даем команду

	./get-words.sh book.fb2 или ./all-in-one.sh -n book.fb2
	
	и получаем книгу с ударениями в имена и названиях, которую потом слушаем.

11) если были сделаны изменения в текстовой версии основного словаря tts.txt, то командой

	./txt2lexx.sh [tts.txt]

	, чтобы создать lexx для импорта на телефоне, результат пишется в ttsin.lexx, а имя файла tts.txt можно не указывать, оно используется по умолчанию.

12) редактируем все файлы только в профильных текстовых редакторах, например, vim (все вариации), Notepad++ и т.д. Программ типа Word не использовать!
13) скрипт ./addnames.sh ТАКЖЕ ищет в файлах names-in-simple.list и book_words.txt готовые шаблоны вида слово=сло'во и " слово"=" сло'во" и записывает их
в файл gw_wordsin2lexx.txt, где их можно проверить до добавления в tts.txt. Скрипт ./add2lexx.sh добавляет содержимое gw_wordsin2lexx.txt в tts.txt и сортирует его.
Файл gw_wordsin2lexx.txt автоматически удаляется после запуска ./add2lexx.sh.

Примечания:
-----------
1) файлы отмеченные "*" сделать исполняемыми (chmod 755 *.sh);
2) check-lexx.sh работает только на файле tts.txt
3) tts.txt получить командой

	 ./lexx2txt.sh TTS.lexx [tts.txt]

	, где TTS.lexx - экспортированный словарь, tts.txt - необязательное указание выходного файла.
4) tts.txt можно преобразовать в TTS.lexx командой

	./txt2lexx.sh tts.txt TTS.lexx

5) файл вида _tts-noq.txt (без начальных кавычек) преобразуется в txt с кавычками командой (если требуется):

	sed -r 's/^([^r"]+"=)/\" \1/g' _tts-noq.txt | sort -u > tts-new.txt

6) для корректной работы скриптов и команды sort дать команду (уже включена в скрипты):

	export LC_COLLATE=C

7) для полной проверки конфликтности правых частей "кавычных" шаблонов нужно запустить ./check-lexx.sh c ключом -a или -f.
Ключ -f также удалит служебные файлы и создаст их заново.

	 ./check-lexx.sh -f

Эта операция может занять несколько минут.

8) команда ./addnames.sh при её запуске сканирует файлы *_gw_*.list и добавляет шаблоны, если строки этих файлов изменены должным образом.
9) команда ./add2lexx.sh добавляет шаблоны в tts.txt из gw_wordsin2lexx.list, который создается командой ./addnames.sh
ВАЖНО: после любых изменений tts.txt, ручных, или командой ./add2lexx.sh, ОБЯЗАТЕЛЬНО снова запустить ./check-lexx.sh
или ./addnames.sh -a , который запустит все эти команды автоматически


Доп. примечания по проверочным файлам, результатам работы ./check-lexx.sh, в нормальном состоянии:
--------------------------------------------------------------
_2x-left.txt		должен быть пустым или его не должно быть
_2x-right-quick.txt	должен быть пустым или его не должно быть
_lost.txt		должен быть пустым или его не должно быть
_error.txt		должен быть пустым или его не должно быть
_pat-error.txt		должен быть пустым или его не должно быть
Описание файлов в рабочей директории ПОСЛЕ запуска всех операций:
-----------------------------------------------------------------
TTS.lexx			+ пользовательский файл LEXX словаря, также его можно получить командой ./txt2lexx.sh tts.txt TTS.lexx
_2x-left.txt			- список конфликтных ЛЕВЫХ частей шаблонов (кроме regex), результат работы ./check-lexx.sh
_2x-right-quick.txt		- список конфликтных ПРАВЫХ частей шаблонов с кавычками, быстрая проверка, результат работы ./check-lexx.sh
_lost.txt			- список "потерянных" шаблонов в сравнении с файлом wordbase0.txt
_pat-error.txt			- список шаблонов с ошибками (пропущенные или неверно поставленные кавычки)
check-lexx.sh		*	+ основной скрипт проверки, обрабатывает уже имеющийся файл tts.txt (опционально, также и книгу для частного словаря)
lexx2txt.sh		*	+ скрипт перевода lexx в txt
txt2lexx.sh		*	+ скрипт перевода lexx в txt
get-words.sh		*	+ получить списки: gw_*.list, запускать только после ./check-lexx.sh (опционально, выдает частный словарь книги)
addnames.sh		*	+ скрипт автоматического добавления имен из файлов gw_*.list (см. примечания)
add2lexx.sh		*	+ добавить шаблоны в gw_wordsin2lexx.list в tts.txt
dic.sh			*	+ просмотр проверочного словаря ударений; инструкции внутри самого скрипта
scriptaux/doubles-right.awk	+ awk-скрипт поиска конфликтов в правой части шаблона: только шаблоны с кавычками (перенесён в скрипт check-lexx.sh)
scriptaux/_tts-noq.txt		- отсортированный файл словаря, с удаленным '" ' (начальная двойная кавычка и пробел)
scriptaux/_4awk-dq-rules.txt	- служебный файл для ПОЛНОЙ проверки шаблонов с кавычками, результат работы ./check-lexx.sh
scriptaux/tts.pat		- служебный файл, результат команды sed -rf pattern.sed tts.txt > tts.pat
scriptdb/exclusion.pat		+ файл исключений из проверочного словаря
scriptdb/wordbase0.txt		+ проверочный словарь (условно равен словарю Хагена)
tools.README			+ этот файл
tts.txt				- текстовая форма словаря lexx, результат ./lexx2txt.sh TTS.lexx
**_gw_names_*_in_dq.list	- список имен собственных, обработанных шаблонами с кавычками (см. примечания)
**_gw_names_*_in_simple.list	- список имен собственных, обработанных простыми шаблонами (см. примечания)
**_gw_nomen_*.list		- списки имен собственных, отсутствующих в базах.
00_gw_new_words.list		- список обычных слов (не имен собственных), не в словарях, результат работы ./get-words.sh book.df2
gw_wordsin2lexx.list		- список шаблонов для добавления в tts.txt командой ./add2lexx.sh (автоматически удаляется при запуске ./add2lexx.sh)
scriptdb/namebase0.txt		+ база имен собственных в виде простых шаблонов (архив namebase-*.7z)
scriptdb/nameoverride.txt	+ база имен собственных, конфликтующих с шаблонами lexx (архив namebase-*.7z)
scriptdb/names-okbd.pat		+ список имен собственных, которые произносятся движком "правильно" по умолчанию (архив namebase-*.7z)
book.fb2			- файл книги для обработки скриптами ./check-lexx.sh или ./get-words.sh
book.fb2.nam			- бэкап исходной книги, создается скриптом ./get-words.sh
book.fb2.omo			- бэкап книги перед обработкой омографов, создается скриптом ./omofix.sh
book.fb2.ini			- бэкап исходной книги ("нулевая версия") перед обработкой имён-омографов, скриптом в работе
book.fb2.lexx			- частный словарь книги book.fb2, создается скриптом ./get-words.sh
omofix.sh		*	+ скрипт обработки омографов в книге, его настройки см. в нём самом
scriptomo/			+ папка со скриптами обработки омографов
nomo-*имя книги*		- папка для обрабтки имен-омографов, содержит дискретные скрипты обработки 
z*.md5				- вспомогательные md5 файлы, чтобы повторно не создавать уже имеющиеся файлы.

doubles-left.awk		0 (удалён, включён в ./check-lexx.sh) awk-скрипт поиска конфликтов в левой части шаблона: простые и шаблоны с кавычками
pattern.sed			0 (удалён, включён в ./check-lexx.sh) скрипт формирования служебного списка паттернов из словаря (кроме regex)

* - исполняемые скрипты
+ - обязательные для работы файлы
- - производные или необязательные файлы
0 - файл удаленный из стандартной поставки

